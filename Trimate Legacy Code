int w,a,s,d,space = 0;
PImage title;
String gun[];
String kills[];
int killss;
int speed = 50;
String dkill = "0";
String name[];
PImage deathb;
PImage back1;
PImage back2;
PImage back3;
PImage back4;
PImage back5;
int death = 0;
PImage map1;
int nick = 0;
PImage map2;
PImage map3;
PImage map4;
PImage map5;
PFont uk;
int map = 1;
int mapse = 0;
float bX;
float bY;
float bY1;
float bX1;
PImage maps;
PImage start;
PImage quit;
PImage back;
int backm = 0;
int exp = 0;
PImage down;
PImage left;
PImage right;
PImage up;
PImage lock;
PImage pistol;
PImage pistold;
PImage spistol;
PImage spistoll;
PImage spistold;
PImage pistoll;
PImage uzi;
String version = "1.0  alpha";
PImage uzid;
PImage uzil;
PImage xm1;
PImage xm1l;
PImage xm1d;
String kill = "0";
PImage xm2;
PImage bulletX;
PImage bulletY;
PImage xm2d;
PImage xm2l;
PImage pistolm;
PImage spistolm;
PImage uzim;
PImage nickname;
PImage arrows;
PImage xm1m;
PImage xm2m;
float x = 0;
float y = 0;
PImage dir;
PImage ok;
PImage no;
PImage exit;
PImage Edown;
PImage Eup;
PImage Eleft;
PImage Eright;
float menu = 0;
float game = 0;
float loadnum = 0;
float exitgame = 0;
int running = 1;
float camX,camY;
int bulleton = 0;
float bulX = 0;
float bulY = 0;
float bulletm = 0;
void setup(){
  orientation(LANDSCAPE);
  size(displayWidth,displayHeight,P2D);
  background(0);
  gun[0] = "1";
  ok = loadImage("ok.png");
  no = loadImage("no.png");
  exit = loadImage("exitgame.png");
  deathb = loadImage("death.png");
  back = loadImage("back.png");
  back1 = loadImage("maps/back1.png");
  back2 = loadImage("maps/back2.png");
  back3 = loadImage("maps/back3.png");
  back4 = loadImage("maps/back4.png");
  back5 = loadImage("maps/back5.png");
  maps = loadImage("maps/back1.png");
  map1 = loadImage("maps/back1.png");
  map2 = loadImage("maps/back2.png");
  map3 = loadImage("maps/back3.png");
  map4 = loadImage("maps/back4.png");
  map5 = loadImage("maps/back5.png");
  map1.resize(width/5,width/5);
  map2.resize(width/5,width/5);
  map3.resize(width/5,width/5);
  map4.resize(width/5,width/5);
  map5.resize(width/5,width/5);
  title = loadImage("title.png");
  start = loadImage("start.png");
  nickname = loadImage("nickname.png");
  arrows = loadImage("arrows.png");
  quit = loadImage("quit.png");
  Edown = loadImage("enemy/Down.png");
  Eup = loadImage("enemy/up.png");
  Eleft = loadImage("enemy/Left.png");
  Eright = loadImage("enemy/Right.png");
  down = loadImage("Down.png");
  left = loadImage("Left.png");
  right = loadImage("Right.png");
  up = loadImage("up.png");
  bulletX = loadImage("bulletX.png");
  bulletY = loadImage("bulletY.png");
  bulletX.resize(width/25,width/25);
  bulletY.resize(width/25,width/25);
  lock = loadImage("guns/locked.png");
  pistol = loadImage("guns/Pistol.png");
  pistoll = loadImage("guns/PistolL.png");
  pistold = loadImage("guns/PistolD.png");
  spistol = loadImage("guns/Scope Pistol.png");
  spistoll = loadImage("guns/Scope PistolL.png");
  spistold = loadImage("guns/Scope PistolD.png");
  uzi = loadImage("guns/UZI.png");
  uzid = loadImage("guns/UZID.png");
  uzil = loadImage("guns/UZIL.png");
  xm1 = loadImage("guns/XM-1.png");
  xm1l = loadImage("guns/XM-1L.png");
  xm1d = loadImage("guns/XM-1D.png");
  xm2 = loadImage("guns/XM-2.png");
  xm2l = loadImage("guns/XM-2L.png");
  xm2d = loadImage("guns/XM-2D.png");
  pistolm = loadImage("guns/PistolL.png");
  spistolm = loadImage("guns/Scope PistolL.png");
  uzim = loadImage("guns/UZIL.png");
  xm1m = loadImage("guns/XM-1L.png");
  xm2m = loadImage("guns/XM-2L.png");
  dir = down;
  title.resize(width/2,height/2);
  start.resize(width/5,height/5);
  nickname.resize(width/5,height/5);
  arrows.resize(width/5,height/5);
  quit.resize(width/5,height/5);
  back.resize(width/5,height/5);
  exit.resize(width/2,height/2);
  deathb.resize(width/2,height/2);
  ok.resize(width/6,height/6);
  no.resize(width/6,height/6);
  Eup.resize(width/15,width/15);
  Edown.resize(width/15,width/15);
  Eleft.resize(width/15,width/15);
  Eright.resize(width/15,width/15);
  menugun();
  gunset();
  menu = 1;
  name[0] = "Blue";
  kills[0] = "1";
  uk = createFont("uk.otf", 20);
}
void draw(){
  clear();
  textSize(20);
  textFont(uk);
  if(menu == 1) {
    left.resize(width/6,width/6);
    imageMode(CENTER);
    text(version,0,20);
    image(title,width/2,100);
    image(start,width/4,height/2);
    image(nickname,width/4,height/3.4);
    text(name[0], width/1.6, height/2.3);
    image(arrows,width/1.5,height/3);
    image(quit,width/4,height/1.4);
    image(left,width/1.5,height/1.65);
    killss = kills[0].length()-1;
    if(int(gun[0]) == 1){image(pistolm,width/1.65,height/1.45); text("Starter Pistol",width/1.6,height/1.2);  exp = 0;}
    if(int(gun[0]) == 2 && killss > 49){image(spistolm,width/1.65,height/1.45); text("Scope Pistol",width/1.6,height/1.2); exp = 0;}else{if(int(gun[0]) == 2){image(lock,width/1.65,height/1.45); text("Collect 50 Experience to Unlock",width/1.6,height/1.2); exp = 1;}}
    if(int(gun[0]) == 3 && killss > 124){image(uzim,width/1.65,height/1.45); text("UZI",width/1.6,height/1.2); exp = 0;}else{if(int(gun[0]) == 3){image(lock,width/1.65,height/1.45); text("Collect 125 Experience to Unlock",width/1.6,height/1.2); exp = 1;}}
    if(int(gun[0]) == 4 && killss > 199){image(xm1m,width/1.65,height/1.45); text("XM-1",width/1.6,height/1.2); exp = 0;}else{if(int(gun[0]) == 4){image(lock,width/1.65,height/1.45); text("Collect 200 Experience to Unlock",width/1.6,height/1.2); exp = 1;}}
    if(int(gun[0]) == 5 && killss > 274){image(xm2m,width/1.65,height/1.45); text("XM-2",width/1.6,height/1.2); exp = 0;}else{if(int(gun[0]) == 5){image(lock,width/1.65,height/1.45); text("Collect 275 Experience to Unlock",width/1.6,height/1.2); exp = 1;}}
    text(str(killss) + " Experience",width/1.6,height/1.15);
  }
  if(nick == 1) {
    text("Choose Nickname",width/2.3,height/3);
    text(name[0],width/2.15,height/2);
    image(back,width/2,height/1.4);
  }
  if(game == 1) {
    imageMode(CENTER);
    dir.resize(width/15,width/15);
    render();
    enemy();
    enemy1();
    image(dir,width/2+camX,height/2+camY);
    gun();
    if(space == 1) {
      shoot();
    }
    bulletrender();
    if(w == 1) {
      y+= width/175;
      dir = up;
    }
    if(s == 1) {
      y-= width/175;
      dir = down;
    }
    if(a == 1) {
      x+= width/175;
      dir = left;
    }
    if(d == 1) {
      x-= width/175;
      dir = right;
    }
  }
  if(mapse == 1) {
    imageMode(CENTER);
    text(version,0,20);
    image(title,width/2,100);
    image(start,width/4,height/2);
    image(arrows,width/1.5,height/3);
    image(back,width/4,height/1.4);
    if(map == 1){image(map1,width/1.5,height/1.65);text("Classic Map",width/1.6,height/1.2);}
    if(map == 2){image(map2,width/1.5,height/1.65);text("Molten Meadows",width/1.6,height/1.2);}
    if(map == 3){image(map3,width/1.5,height/1.65);text("Greenlands",width/1.6,height/1.2);}
    if(map == 4){image(map4,width/1.5,height/1.65);text("Water Works",width/1.6,height/1.2);}
    if(map == 5){image(map5,width/1.5,height/1.65);text("Sacred Forest",width/1.6,height/1.2);}
  }
  if(exitgame == 1) {
    imageMode(CENTER);
    image(exit,width/2,height/2);
    image(ok,width/1.6,height/1.6);
    image(no,width/2.6,height/1.6);
  }
  if(death == 1) {
    imageMode(CENTER);
    if(kill == ""){dkill = "0";}else{dkill = str(kill.length()-1);}
    render();
    image(deathb,width/2,height/2);
    text("You killed: " + dkill + " Reds",width/2.3,height/2.6);
    image(ok,width/2,height/1.6);
  }
  text("FPS " + frameRate, width-100, 20);
}
void touchStarted() {
  if(nick == 1) {
    if(touches[0].x < width/2 + (width/5/2) && touches[0].x > width/2 - (width/5/2) && touches[0].y < height/1.4 + (height/5/2) && touches[0].y > height/1.4 - (height/5/2)) {
      nick = 0;
      menu = 1;
      
    }
  }
  if(mapse == 1) {
    if(touches[0].x < width/4 + (width/5/2) && touches[0].x > width/4 - (width/5/2) && touches[0].y < height/1.4 + (height/5/2) && touches[0].y > height/1.4 - (height/5/2)) {
      backm = 1;
    }
    if(touches[0].x < width/4 + (width/5/2) && touches[0].x > width/4 - (width/5/2) && touches[0].y < height/2 + (height/5/2) && touches[0].y > height/2 - (height/5/2)) {
      exitgame = 0;
      dir = down;
      mapse = 0;
      game = 1;
      x = 0;
      y = 0;
      if(int(gun[0]) == 1){speed = 20;}
      if(int(gun[0]) == 2){speed = 30;}
      if(int(gun[0]) == 3){speed = 40;}
      if(int(gun[0]) == 4){speed = 50;}
      if(int(gun[0]) == 5){speed = 60;}
      kill = "";
      bX = width+width/2;
      bY = height+height/2;
      bX1 = width+width/2;
      bY1 = height+height/2;
      camX = 0;
      camY = 0;
      maps.resize(width*2,width*2);
    }
    if(touches[0].x < width/1.5 && touches[0].x > width/1.5 - (width/5/2) && touches[0].y < height/3 + (height/5/2) && touches[0].y > height/3 - (height/5/2)) {
      if(map == 2) {
        map = 1;
        maps = loadImage("maps/back1.png");
      }
      if(map == 3) {
        map = 2;
        maps = loadImage("maps/back2.png");
      }
      if(map == 4) {
        map = 3;
        maps = loadImage("maps/back3.png");
      }
      if(map == 5) {
        map = 4;
        maps = loadImage("maps/back4.png");
      }
    }
    if(touches[0].x < width/1.5 + (width/5/2) && touches[0].x > width/1.5 && touches[0].y < height/3 + (height/5/2) && touches[0].y > height/3 - (height/5/2)) {
      if(map == 4) {
        map = 5;
        maps = loadImage("maps/back5.png");
      }
      if(map == 3) {
        map = 4;
        maps = loadImage("maps/back4.png");
      }
      if(map == 2) {
        map = 3;
        maps = loadImage("maps/back3.png");
      }
      if(map == 1) {
        map = 2;
        maps = loadImage("maps/back2.png");
      }
    }
  }
  if(menu == 1) {
    if(touches[0].x < width/4 + (width/5/2) && touches[0].x > width/4 - (width/5/2) && touches[0].y < height/1.4 + (height/5/2) && touches[0].y > height/1.4 - (height/5/2)) {
    }
    if(touches[0].x < width/4 + (width/5/2) && touches[0].x > width/4 - (width/5/2) && touches[0].y < height/2 + (height/5/2) && touches[0].y > height/2 - (height/5/2) && exp == 0) {
      exitgame = 0;
      dir = down;
      menu = 0;
      game = 0;
      mapse = 1;
    }
    if(touches[0].x < width/4 + (width/5/2) && touches[0].x > width/4 - (width/5/2) && touches[0].y < height/3.4 + (height/5/2) && touches[0].y > height/3.4 - (height/5/2)) {
      exitgame = 0;
      menu = 0;
      game = 0;
      mapse = 0;
      nick = 1;
    }
    if(touches[0].x < width/1.5 && touches[0].x > width/1.5 - (width/5/2) && touches[0].y < height/3 + (height/5/2) && touches[0].y > height/3 - (height/5/2)) {
      if(int(gun[0]) == 2) {
        gun[0] = "1";
      }
      if(int(gun[0]) == 3) {
        gun[0] = "2";
      }
      if(int(gun[0]) == 4) {
        gun[0] = "3";
      }
      if(int(gun[0]) == 5) {
        gun[0] = "4";
      }
    }
    if(touches[0].x < width/1.5 + (width/5/2) && touches[0].x > width/1.5 && touches[0].y < height/3 + (height/5/2) && touches[0].y > height/3 - (height/5/2)) {
      if(int(gun[0]) == 4) {
        gun[0] = "5";
      }
      if(int(gun[0]) == 3) {
        gun[0] = "4";
      }
      if(int(gun[0]) == 2) {
        gun[0] = "3";
      }
      if(int(gun[0]) == 1) {
        gun[0] = "2";
      }
    }
  }
  if(backm == 1){
      menu = 1;
      mapse = 0;
      game = 0;
      exitgame = 0;
      backm = 0;
  }
 if(exitgame == 1) {
   if(touches[0].x < width/1.6 + (width/6/2) && touches[0].x > width/1.6 - (width/5/2) && touches[0].y < height/1.6 + (height/6/2) && touches[0].y > height/1.6 - (height/6/2)) {
     exitgame = 0;
     left = loadImage("Left.png");
     menu = 1;
     game = 0;
   }
   if(touches[0].x < width/2.6 + (width/6/2) && touches[0].x > width/2.6 - (width/5/2) && touches[0].y < height/1.6 + (height/6/2) && touches[0].y > height/1.6 - (height/6/2)) {
     exitgame = 0;
     game = 1;
   }
 }
 if(death == 1) {
   if(touches[0].x < width/2 + (width/6/2) && touches[0].x > width/2 - (width/5/2) && touches[0].y < height/1.6 + (height/6/2) && touches[0].y > height/1.6 - (height/6/2)) {
     exitgame = 0;
     death = 0;
     left = loadImage("Left.png");
     menu = 1;
     game = 0;
   }
 }
 if(game == 1 && exitgame == 0) {
   space = 1;
 }
}
/*void touchEnded() {
  if(game == 1 && exitgame == 0) {
    space = 0;
  }
}
void keyPressed() {
  if(nick == 1) {
    if(key == BACKSPACE && name[0].length() > 0) {
      name[0] = name[0].substring( 0, name[0].length()-1 );
    }
    if((key >= 'A' && key <= 'z') || key == ' ') {
      if(name[0].length() < 16) {
        name[0] += key;
      }
    }
  }
  if(keyCode == ESC) {
    key = 0;
    if(menu == 0 && game == 1) {
      if(exitgame == 1) {
        game = 1;
        exitgame = 0;
      }
      else {
        menu = 0;
        game = 1;
        exitgame = 1;
      }
    }
  }
  if(key == 'w' || keyCode == UP || key == 'W') {
    w = 1;
  }
  if(key == 'a' || keyCode == LEFT || key == 'A') {
    a = 1;
  }
  if(key == 'd' || keyCode == RIGHT || key == 'D') {
    d = 1;
  }
  if(key == 's' || keyCode == DOWN || key == 'S') {
    s = 1;
  }
  if(key == ' ') {
    space = 1;
  }
}
void keyReleased() {
  if(key == 'w' || keyCode == UP || key == 'W') {
    w = 0;
  }
  if(key == 'a' || keyCode == LEFT || key == 'A') {
    a = 0;
  }
  if(key == 's' || keyCode == DOWN || key == 'S') {
    s = 0;
  }
  if(key == 'd' || keyCode == RIGHT || key == 'D') {
    d = 0;
  }
  if(key == ' ') {
    space = 0;
  }
}*/
void render() {
  imageMode(CENTER);
  image(maps,x+width+camX,y+width+camY);
  image(maps,x-width+camX,y-width+camY);
  image(maps,x+width+camX,y-width+camY);
  image(maps,x-width+camX,y+width+camY);
  if(x > width*2) {
    camX=width*2-x;
  }
  if(x < -width) {
    camX=-width-x;
  }
  if(y > width*2) {
    camY=width*2-y;
  }
  if(y < -width) {
    camY=-width-y;
  }
  if(x > width*2+width/2-width/15/2) {
    x=width*2+width/2-width/15/2-1;
  }
  if(x < -width*1.468) {
    x = -width*1.468+1;
  }
  if(y > width*2+height/2-width/15/2) {
    y=width*2+height/2-width/15/2-1;
  }
  if(y < -width-height/2+width/15/2) {
    y=-width-height/2+width/15/2+1;
  }
}
void gun() {
  if(int(gun[0]) == 1) {
    if(dir == left) {
      image(pistoll,width/2+camX-width/15/3,height/2+camY+width/15/4);
    }
    if(dir == right) {
      image(pistol,width/2+camX+width/15/3,height/2+camY+width/15/4);
    }
    if(dir == down) {
      image(pistold,width/2+camX+width/15/3,height/2+camY+width/15/5);
    }
  }
  if(int(gun[0]) == 2) {
    if(dir == left) {
      image(spistoll,width/2+camX-width/15/3,height/2+camY+width/15/5);
    }
    if(dir == right) {
      image(spistol,width/2+camX+width/15/3,height/2+camY+width/15/5);
    }
    if(dir == down) {
      image(spistold,width/2+camX+width/15/3,height/2+camY+width/15/5);
    }
  }
  if(int(gun[0]) == 3) {
    if(dir == left) {
      image(uzil,width/2+camX-width/15/3,height/2+camY+width/15/4);
    }
    if(dir == right) {
      image(uzi,width/2+camX+width/15/3,height/2+camY+width/15/4);
    }
    if(dir == down) {
      image(uzid,width/2+camX+width/15/3,height/2+camY+width/15/5);
    }
  }
  if(int(gun[0]) == 4) {
    if(dir == left) {
      image(xm1l,width/2+camX-width/15/3,height/2+camY+width/15/4);
    }
    if(dir == right) {
      image(xm1,width/2+camX+width/15/3,height/2+camY+width/15/4);
    }
    if(dir == down) {
      image(xm1d,width/2+camX+width/15/3,height/2+camY+width/15/5);
    }
  }
  if(int(gun[0]) == 5) {
    if(dir == left) {
      image(xm2l,width/2+camX-width/15/3,height/2+camY+width/15/4);
    }
    if(dir == right) {
      image(xm2,width/2+camX+width/15/3,height/2+camY+width/15/4);
    }
    if(dir == down) {
      image(xm2d,width/2+camX+width/15/3,height/2+camY+width/15/5);
    }
  }
}
void menugun() {
    pistolm.resize(width/6,height/6);
    spistolm.resize(width/6,height/6);
    uzim.resize(width/6,height/6);
    xm1m.resize(width/4,height/4);
    xm2m.resize(width/4,height/4);
}
void gunset() {
  pistol.resize(width/15,height/15);
  pistoll.resize(width/15,height/15);
  pistold.resize(width/55,height/15);
  spistol.resize(width/13,height/13);
  spistoll.resize(width/13,height/13);
  spistold.resize(width/55,height/12);
  uzi.resize(width/12,height/12);
  uzil.resize(width/12,height/12);
  uzid.resize(width/55,height/12);
  xm1.resize(width/8,height/8);
  xm1l.resize(width/8,height/8);
  xm1d.resize(width/55,height/11);
  xm2.resize(width/8,height/8);
  xm2l.resize(width/8,height/8);
  xm2d.resize(width/55,height/10);
}
void shoot() {
  if(dir == up && bulleton == 0) {
    bulleton = 1;
    bulletm = 0;
    bulY = -y;
    bulX = -x;
  }
  if(dir == down && bulleton == 0) {
    bulleton = 2;
    bulletm = 0;
    bulY = -y;
    bulX = -x;
  }
  if(dir == left && bulleton == 0) {
    bulleton = 3;
    bulletm = 0;
    bulY = -y;
    bulX = -x;
  }
  if(dir == right && bulleton == 0) {
    bulleton = 4;
    bulletm = 0;
    bulY = -y;
    bulX = -x;
  }
}
void bulletrender() {
  if(bulleton != 0) {
    if(bulleton == 1) {
      image(bulletY,x+bulX+width/2+camX+width/15/3,y+bulY+height/2.5+camY+width/15/5+bulletm);
      bulletm -= speed;
      if(y+bulY-bulletm+height/4+camY+width/15/5 > height) {
        bulleton = 0;
      }
    }
    if(bulleton == 2) {
      image(bulletY,x+bulX+width/2+camX+width/15/3,y+bulY+height/2+camY+width/15/5+bulletm);
      bulletm += speed;
      if(y+bulY+bulletm+height/2+camY+width/15/5 > height) {
        bulleton = 0;
      }
    }
    if(bulleton == 3) {
      image(bulletX,x+bulX+width/2+camX-width/15/3+bulletm,y+bulY+height/2+camY+width/15/4);
      bulletm -= speed;
      if(x+bulX-bulletm+width/4+camX-width/15/3 > width) {
        bulleton = 0;
      }
    }
    if(bulleton == 4) {
      image(bulletX,x+bulX+width/2+camX+width/15/3+bulletm,y+bulY+height/2+camY+width/15/4);
      bulletm += speed;
      if(x+bulX+bulletm+width/2+camX-width/15/3 > width) {
        bulleton = 0;
      }
    }
  }
}
void enemy() {
  if(bX > x+200 && bX > x-200) {
    bX -= width/225;
    image(Eright,x+width/2+camX-bX,y+height/2+camY-bY);
  }else {
    if(bX < x+200 && bX < x-200) {
      bX += width/225;
      image(Eleft,x+width/2+camX-bX,y+height/2+camY-bY);
    }else {
      if(bY < y-10) {
        bY += width/225;
        image(Eup,x+width/2+camX-bX,y+height/2+camY-bY);
      }else {
        if(bY > y+10) {
          bY -= width/225;
          image(Edown,x+width/2+camX-bX,y+height/2+camY-bY);
        }else {
          if(bY < y+10 && bY > y-10) {
            if(bX > x) {
              bX -= width/225;
              image(Eright,x+width/2+camX-bX,y+height/2+camY-bY);
            }else {
              bX += width/225;
              image(Eleft,x+width/2+camX-bX,y+height/2+camY-bY);
            }
          }
        }
      }
    }
  }
  if(x+bulX+width/2+camX-width/15/3+bulletm < x+width/2+camX-bX+50 && x+bulX+width/2+camX-width/15/3+bulletm > x+width/2+camX-bX-50 && y+bulY+height/2+camY+width/15/4 < y+height/2+camY-bY+50 && y+bulY+height/2+camY+width/15/4 > y+height/2+camY-bY-50 || x+bulX+width/2+camX+width/15/3 < x+width/2+camX-bX+50 && x+bulX+width/2+camX+width/15/3 > x+width/2+camX-bX-50 && y+bulY+height/2.5+camY+width/15/5+bulletm < y+height/2+camY-bY+50 && y+bulY+height/2.5+camY+width/15/5+bulletm > y+height/2+camY-bY-50) {
    Edie();
  }
  if(bX < x+100 && bX > x-100 && bY < y+100 && bY > y-100) {
    die();
  }
}
void enemy1() {
  if(bX1 > x+200 && bX1 > x-200) {
    bX1 -= width/225;
    image(Eright,x+width/2+camX-bX1,y+height/2+camY-bY1);
  }else {
    if(bX1 < x+200 && bX1 < x-200) {
      bX1 += width/225;
      image(Eleft,x+width/2+camX-bX1,y+height/2+camY-bY1);
    }else {
      if(bY1 < y-10) {
        bY1 += width/225;
        image(Eup,x+width/2+camX-bX1,y+height/2+camY-bY1);
      }else {
        if(bY1 > y+10) {
          bY1 -= width/225;
          image(Edown,x+width/2+camX-bX1,y+height/2+camY-bY1);
        }else {
          if(bY1 < y+10 && bY1 > y-10) {
            if(bX1 > x) {
              bX1 -= width/225;
              image(Eright,x+width/2+camX-bX1,y+height/2+camY-bY1);
            }else {
              bX1 += width/225;
              image(Eleft,x+width/2+camX-bX1,y+height/2+camY-bY1);
            }
          }
        }
      }
    }
  }
  if(x+bulX+width/2+camX-width/15/3+bulletm < x+width/2+camX-bX1+55 && x+bulX+width/2+camX-width/15/3+bulletm > x+width/2+camX-bX1-55 && y+bulY+height/2+camY+width/15/4 < y+height/2+camY-bY1+55 && y+bulY+height/2+camY+width/15/4 > y+height/2+camY-bY1-55 || x+bulX+width/2+camX+width/15/3 < x+width/2+camX-bX1+55 && x+bulX+width/2+camX+width/15/3 > x+width/2+camX-bX1-55 && y+bulY+height/2.5+camY+width/15/5+bulletm < y+height/2+camY-bY1+55 && y+bulY+height/2.5+camY+width/15/5+bulletm > y+height/2+camY-bY1-55) {
    Edie1();
  }
  if(bX1 < x+100 && bX1 > x-100 && bY1 < y+100 && bY1 > y-100) {
    die();
  }
}
void Edie() {
  bX = random(x-width-width/2,x+width+width/2);
  bY = random(y-height-height/2,y+height+height/2);
  kill();
}
void Edie1() {
  bX1 = random(x-width-width/2,x+width+width/2);
  bY1 = random(y-height-height/2,y+height+height/2);
  kill();
}
void die() {
  if(kill != ""){kills[0] = kill + kills[0];}
  exitgame = 0;
  menu = 0;
  death = 1;
  game = 0;
}
void kill() {
  kill += "1";
}
